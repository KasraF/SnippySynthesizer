{
	"varNames": [
		"rs"
	],
	"previous_env": {
		"time": 5,
		"#": "0",
		"lst": "[5, 3, 4, 2, 1]",
		"pivot": "3",
		"rs": "[]",
		"i": "5"
	},
	"envs": [
		{
			"time": 6,
			"#": "0",
			"lst": "[5, 3, 4, 2, 1]",
			"pivot": "3",
			"rs": "[5]",
			"i": "5"
		},
		{
			"time": 8,
			"#": "1",
			"lst": "[5, 3, 4, 2, 1]",
			"pivot": "3",
			"rs": "[5, 3]",
			"i": "3"
		},
		{
			"time": 10,
			"#": "2",
			"lst": "[5, 3, 4, 2, 1]",
			"pivot": "3",
			"rs": "[5, 3, 4]",
			"i": "4"
		},
		{
			"time": 12,
			"#": "3",
			"lst": "[5, 3, 4, 2, 1]",
			"pivot": "3",
			"rs": "[2, 5, 3, 4]",
			"i": "2"
		},
		{
			"time": 14,
			"#": "4",
			"lst": "[5, 3, 4, 2, 1]",
			"pivot": "3",
			"rs": "[1, 2, 5, 3, 4]",
			"i": "1"
		}
	],
	"program": "\"\"\"\nPartition:\n   Partition the given list around the\n   given pivot, such that all values\n   smaller than the pivot come before\n   all values equal or greater.\n   \n   >>> task([3, 5, 4, 2, 1], 3) ==\n       [1, 2, 5, 3, 4]\n\"\"\"\ndef task(lst, pivot):\n    rs = []\n    for i in lst:\n        rs = rs\n    return rs\n \ntask([5,3,4,2,1], 3)",
	"line_no": 14
}